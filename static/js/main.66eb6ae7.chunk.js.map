{"version":3,"sources":["components/Logo/face.png","components/Navigation/Navigation.js","components/Register/Register.js","components/Logo/Logo.js","components/SignIn/SignIn.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/Facerecognition/Facerecognition.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedin","style","display","justifyContent","onClick","className","Register","props","onNameChange","event","setState","name","target","value","onEmailChange","email","onPasswordChange","password","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","id","loadUser","htmlFor","type","onChange","this","React","Component","Logo","options","max","height","width","paddingTop","alt","src","face","SignIn","signInEmail","signInPassword","Rank","entries","ImageLinkForm","onInputChange","onPictureSubmit","Facerecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","move","speed","interactivity","detect_on","events","onhover","mode","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.66eb6ae7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face.58b665c2.png\";","import React from 'react';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedin }) => {\r\n  if (isSignedin) {\r\n    return (\r\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n        <p\r\n          onClick={() => onRouteChange('signout')}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n        <p\r\n          onClick={() => onRouteChange('signin')}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Sign in\r\n        </p>\r\n        <p\r\n          onClick={() => onRouteChange('register')}\r\n          className=\"f3 link dim black underline pa3 pointer\"\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      name: ''\r\n    };\r\n  }\r\n\r\n  onNameChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3001/register', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n                onClick={this.onSubmitSignIn}\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport face from './face.png';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\r\n       <div className=\"Tilt-inner pa3\"> <img style={{paddingTop: '5px'}} alt='logo' src={face} className='logo'/> </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    };\r\n  }\r\n\r\n  onEmailChange = event => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = event => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch('http://localhost:3001/signin', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.id) {\r\n          this.props.loadUser(user);\r\n          this.props.onRouteChange('home');\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => onRouteChange('register')}\r\n                className=\"pointer f6 link dim black db\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport './Rank.css';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"white-f3\">{`${name}, your current entry count is ...`}</div>\r\n      <div className=\"white-f1\">{entries}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onPictureSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {'This Magic Brain will detect faces in your pictures. Give it a try!'}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"text\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-green\" onClick={onPictureSubmit}>\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport './Facerecognition.css';\r\n\r\nconst Facerecognition = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt2\">\r\n        <img\r\n          id=\"inputImage\"\r\n          alt=\"\"\r\n          src={imageUrl}\r\n          width=\"500px\"\r\n          height=\"auto\"\r\n        />\r\n        <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Facerecognition;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Particles from 'react-particles-js';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Rank from './components/Rank/Rank';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Facerecognition from './components/Facerecognition/Facerecognition';\r\n\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 80,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    },\r\n    move: {\r\n  speed: 6\r\n}\r\n},\r\ninteractivity: {\r\ndetect_on: 'window',\r\nevents: {\r\n  onhover: {\r\n    enable: true,\r\n    mode: ['repulse']\r\n    }\r\n  }\r\n}\r\n};\r\n\r\nconst initialState = {\r\n  input: '',\r\n  imageUrl: '',\r\n  box: {},\r\n  route: 'signin',\r\n  isSignedin: false,\r\n  user: {\r\n    id: '',\r\n    name: '',\r\n    email: '',\r\n    entries: 0,\r\n    joined: ''\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  loadUser = data => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined\r\n      }\r\n    });\r\n  };\r\n\r\n  calculateFaceLocation = data => {\r\n    const clarifaiFace =\r\n      data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputImage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - clarifaiFace.right_col * width,\r\n      bottomRow: height - clarifaiFace.bottom_row * height\r\n    };\r\n  };\r\n\r\n  displayFaceBox = box => {\r\n    this.setState({ box: box });\r\n  };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onPictureSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    fetch('http://localhost:3001/imageurl', {\r\n      method: 'post',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        input: this.state.input\r\n      })\r\n    })\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        if (response) {\r\n          fetch('http://localhost:3001/image', {\r\n            method: 'put',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count }));\r\n            })\r\n            .catch(console.log);\r\n        }\r\n\r\n        this.displayFaceBox(this.calculateFaceLocation(response));\r\n      })\r\n      .catch(err => console.log(err, 'error'));\r\n  };\r\n\r\n  onRouteChange = route => {\r\n    if (route === 'signout') {\r\n      this.setState(initialState);\r\n    } else if (route === 'home') {\r\n      this.setState({ isSignedin: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedin, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className=\"particles\" params={particlesOptions} />\r\n        <Navigation\r\n          isSignedin={isSignedin}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n        {route === 'home' ? (\r\n          <div>\r\n            <Logo />\r\n            <Rank\r\n              name={this.state.user.name}\r\n              entries={this.state.user.entries}\r\n            />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onPictureSubmit={this.onPictureSubmit}\r\n            />\r\n            <Facerecognition box={box} imageUrl={imageUrl} />\r\n          </div>\r\n        ) : route === 'signin' ? (\r\n          <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}